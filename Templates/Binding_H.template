@class %«className»Response;
@class %«className»Operation;

%FOREACH operation in operations
@class %«className»_%«operation.className»;
%ENDFOR

@protocol %«className»ResponseDelegate <NSObject>
- (void) operation:(%«className»Operation *)operation completedWithResponse:(%«className»Response *)response;

@end

typedef void (^%«className»OperationBlock)(id operation, %«className»Response *response);

#define kServerAnchorCertificates   @"kServerAnchorCertificates"
#define kServerAnchorsOnly          @"kServerAnchorsOnly"
#define kClientIdentity             @"kClientIdentity"
#define kClientCertificates         @"kClientCertificates"
#define kClientUsername             @"kClientUsername"
#define kClientPassword             @"kClientPassword"
#define kNSURLCredentialPersistence @"kNSURLCredentialPersistence"
#define kValidateResult             @"kValidateResult"

@interface %«className» : NSObject <%«className»ResponseDelegate> {
	BOOL synchronousOperationComplete;
}

@property (nonatomic, copy) NSURL *address;
@property (nonatomic) BOOL logXMLInOut;
@property (nonatomic) BOOL ignoreEmptyResponse;
@property (nonatomic) NSTimeInterval timeout;
@property (nonatomic, retain) NSMutableArray *cookies;
@property (nonatomic, retain) NSMutableDictionary *customHeaders;
@property (nonatomic, retain) id<SSLCredentialsManaging> sslManager;
@property (nonatomic, retain) SOAPSigner *soapSigner;

+ (NSTimeInterval) defaultTimeout;

- (id)initWithAddress:(NSString *)anAddress;
- (void)sendHTTPCallUsingBody:(NSString *)body soapAction:(NSString *)soapAction forOperation:(%«className»Operation *)operation;
- (void)addCookie:(NSHTTPCookie *)toAdd;
- (NSString *)MIMEType;

%FOREACH operation in operations
- (%«className»Response *)%«operation.invokeString»;
- (void)%«operation.asyncInvokeString» delegate:(id<%«className»ResponseDelegate>)responseDelegate;
- (%«className»_%«operation.className»*)%«operation.asyncInvokeString» completionBlock:(%«className»OperationBlock)responseCompletionBlock;

%ENDFOR

@end

@interface %«className»Operation : NSOperation 

@property (nonatomic, retain) %«className» *binding;
@property (nonatomic, strong) %«className»Response *response;
@property (nonatomic, weak) id<%«className»ResponseDelegate> delegate;
@property (nonatomic, retain) NSMutableData *responseData;
@property (nonatomic, retain) NSURLConnection *urlConnection;
@property (nonatomic, copy) %«className»OperationBlock finishedBlock;

- (id)initWithBinding:(%«className» *)aBinding delegate:(id<%«className»ResponseDelegate>)aDelegate;
- (id)initWithBinding:(%«className» *)aBinding completionBlock:(%«className»OperationBlock)responseCompletionBlock;
- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error;

@end

%FOREACH operation in operations
@interface %«className»_%«operation.className» : %«className»Operation

%FOREACH part in operation.input.body.parts
@property (nonatomic, %«part.element.type.assignOrRetain») %«part.element.type.classNameWithPtr» %«part.name»;
%ENDFOR
%FOREACH header in operation.input.headers
@property (nonatomic, %«header.type.assignOrRetain») %«header.type.classNameWithPtr» %«header.name»;
%ENDFOR

- (id)initWithBinding:(%«className» *)aBinding delegate:(id<%«className»ResponseDelegate>)aDelegate
%FOREACH part in operation.input.body.parts
	%«part.name»:(%«part.element.type.classNameWithPtr»)a%«part.uname»
%ENDFOR
%FOREACH header in operation.input.headers
	%«header.name»:(%«header.type.classNameWithPtr»)a%«header.uname»
%ENDFOR
;

- (id)initWithBinding:(%«className» *)aBinding completionBlock:(%«className»OperationBlock)responseCompletionBlock
%FOREACH part in operation.input.body.parts
        %«part.name»:(%«part.element.type.classNameWithPtr»)a%«part.uname»
%ENDFOR
%FOREACH header in operation.input.headers
        %«header.name»:(%«header.type.classNameWithPtr»)a%«header.uname»
%ENDFOR
;

@end
%ENDFOR

@interface %«className»_envelope : NSObject {

}

+ (%«className»_envelope *)sharedInstance;

- (NSString *)serializedFormUsingHeaderElements:(NSDictionary *)headerElements bodyElements:(NSDictionary *)bodyElements bodyKeys:(NSArray *)bodyKeys;

@end

@interface %«className»Response : NSObject

@property (nonatomic, retain) NSArray *headers;
@property (nonatomic, retain) NSArray *bodyParts;
@property (nonatomic, retain) NSError *error;

@end
